[project]
name = "{{cookiecutter.project_slug}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.description}}"
authors = ["IFCO Digital"]
requires-python = ">={{cookiecutter.python_full_version}}"
dependencies = [
    "pydantic>=2.10",
]

[dependency-groups]
dev = [
    "coverage==7.1.0",
    "black>=23.3.0",
    "pre-commit>=3.3.3",
    "pytest>=8.3.4",
]

[tool.poe.tasks]
"run" = "python -m streamlit run src/frontend/app.py"
"init" = "sh -c 'pre-commit install && pre-commit run --all-files'"
test = "pytest tests"
"test:coverage" = "sh -c 'poe coverage:erase && poe coverage:run ; poe coverage:combine ; poe coverage:report'"
"test:coverage:html" = "sh -c 'poe coverage:erase && poe coverage:run ; poe coverage:combine ; poe coverage:report ; poe coverage:report:html'"
"coverage:erase" = "coverage erase"
"coverage:run" = "coverage run -m pytest tests"
"coverage:combine" = "coverage combine"
"coverage:report" = "coverage report -m"
"coverage:report:html" = "coverage html"

[tool.black]
line-length = 100
skip-magic-trailing-comma = true

[tool.isort]
profile = "black"
line_length = 100

[tool.flake8]
max-complexity = 10
max-line-length = 100

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
show_missing = true

[tool.bandit.assert_used]
skips = ['*test_*.py']